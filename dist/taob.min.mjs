class t{static#t={};static#e=!1;static use(t){this.#e=t}static add(t,e={}){this.#t[t]=function t(e,s){let r={};for(const o in e)"string"==typeof e[o]||Array.isArray(e[o])?r={...r,[s+o]:e[o]}:"object"==typeof e[o]&&(r={...r,...t(e[o],s+o+".")});return r}(e,"")}static translate(t){if(!1!==this.#e&&this.#t[this.#e]?.[t]){let e=this.#t[this.#e][t];for(;/{.*?}/g.test(e);)e=e.replace(/{(.*?)}/g,((t,e)=>this.translate(e)));return e}return t}}function e(...t){let e="";for(let s of t)s=s||"",s=s.startsWith("/")?s:"/"+s,e+=s;e=e.split("?");let s=e[1];for(e=e[0],e=e.endsWith("/")&&e.length>1?e.substring(0,e.length-1):e,e=e.replace(/\\/g,"/");e.indexOf("//")>-1;)e=e.replace(/\/\//g,"/");return e=e.replace(/_/g,""),e=e.replace(/ /g,""),("/"===e?"":e)+(void 0!==s?"?"+s:"")}class s{constructor(t,s,r){this.result=this.#s(e(t),s,r)}s(t){return this.#r=t,this}async sd(){let t=await this.result;if(!0===t.response?.ok)return t.data;throw new Error("Wrong Response")}e(t){return this.#o=t,this}async ed(){let t=await this.result;if(!1===t.response?.ok)return t.data;throw new Error("Wrong Response")}info(t){return this.#i=t,this}status(t,e){return this.#n[t]=e,this}async statusData(t){let e=await this.result;if(e.response?.status===t)return e;throw new Error("Wrong Response")}then(t){return this.#h=t,this}catch(t){return this.#a=t,this}finally(t){return this.#u=t,this}result;#r=()=>{};#o=()=>{};#i=()=>{};#n={};#h=()=>{};#a=t=>{throw t};#u=()=>{};async#s(t,e,r){let o=this.constructor.requestInterceptor({path:t,parameters:e},r),i=await s.fetch(this.constructor.href+o.path,o.parameters),n=this.constructor.responseInterceptor(i,r);if(void 0!==n.error){this.constructor.hookError(n.error);try{this.#a(n.error)}finally{this.#u(n.error)}return}this.#h(n),void 0!==this.constructor.hookStatus[n.response.status]&&this.constructor.hookStatus[n.response.status].forEach((t=>t(n,r))),void 0!==this.#n[n.response.status]&&this.#n[n.response.status](n);let h=n.response.headers.get(this.constructor.indexInfo)||void 0;return void 0!==h&&void 0!==this.constructor.hookInfo[h]&&this.constructor.hookInfo[h].forEach((t=>t(n,r))),void 0!==h&&this.#i(h,n.response.ok),!0===n.response.ok?this.#r(n.data):!1===n.response.ok&&this.#o(n.data),this.#u(),n}static async fetch(t,e){if(void 0!==e.params){let s=t.split("?");Object.entries(e.params).forEach((([t,e])=>s[0]=s[0].replace(`{${t}}`,e))),delete e.params,t=s.join("?")}if(void 0!==e.query){let s=t.split("?"),r=[];Object.entries(e.query).forEach((([t,e])=>r.push(`${t}=${e}`))),delete e.query,t=s[0]+"?"+r.join("&")+(s[1]?"&"+s[1]:"")}try{const r=await fetch(t,e),o=r.headers.get("content-type");try{if(-1!==o.indexOf("application/json"))var s=await r.json();else if(-1!==o.indexOf("text/"))s=await r.text();else s=await r.blob()}catch(t){s=void 0}return{response:r,data:s}}catch(t){return{error:t}}}static indexInfo="aob-info";static href="";static requestInterceptor=t=>t;static responseInterceptor=t=>t;static hookError=()=>{};static hookStatus={};static hookInfo={}}class r{constructor(t={}){void 0!==t.host&&(this.host=t.host),void 0!==t.prefix&&(this.prefix=t.prefix),void 0!==t.https&&(this.https=t.https),void 0!==t.parameters&&(this.parameters=t.parameters),void 0!==t.indexInfo&&(this.indexInfo=t.indexInfo),this.Requester=class extends s{static hookStatus={};static hookInfo={}},this.#c(),this.#p(),void 0!==t.requestInterceptor&&this.setRequestInterceptor(t.requestInterceptor),void 0!==t.responseInterceptor&&this.setResponseInterceptor(t.responseInterceptor),void 0!==t.hookError&&this.setHookError(t.hookError)}#d=window.location.host;get host(){return this.#d}set host(t){this.#d=t,this.#c()}#f="";get prefix(){return this.#f}set prefix(t){this.#f=e(t),this.#c()}#l=window.location.protocol.slice(0,-1);get https(){return"http"!==this.#l}set https(t){if("boolean"!=typeof t)throw new Error("");this.#l=!0===t?"https":"http",this.#c()}#y="aob-info";get indexInfo(){return this.#y}set indexInfo(t){this.#y=t,this.#p}parameters={};Requester={};#p(){Object.defineProperty(this.Requester,"indexInfo",{value:this.#y,configurable:!0})}#c(){Object.defineProperty(this.Requester,"href",{value:this.#l+"://"+this.host+this.prefix,configurable:!0})}setRequestInterceptor(t){Object.defineProperty(this.Requester,"requestInterceptor",{value:t,configurable:!0})}setResponseInterceptor(t){Object.defineProperty(this.Requester,"responseInterceptor",{value:t,configurable:!0})}setHookError(t){Object.defineProperty(this.Requester,"hookError",{value:t,configurable:!0})}addHookStatus(t,e){void 0===this.Requester.hookStatus[t]&&(this.Requester.hookStatus[t]=[]),this.Requester.hookStatus[t].push(e)}addHookInfo(t,e){void 0===this.Requester.hookInfo[t]&&(this.Requester.hookInfo[t]=[]),this.Requester.hookInfo[t].push(e)}removeHookStatus(t,e){void 0===this.Requester.hookStatus[t]&&(this.Requester.hookStatus[t]=[]),this.Requester.hookStatus[t]=this.Requester.hookStatus[t].filter((t=>t!==e))}removeHookInfo(t,e){void 0===this.Requester.hookInfo[t]&&(this.Requester.hookInfo[t]=[]),this.Requester.hookInfo[t]=this.Requester.hookInfo[t].filter((t=>t!==e))}send(t,e={},s={}){return new this.Requester(t,{...this.parameters,...e},s)}get(t,e={},s={}){return new this.Requester(t,{...this.parameters,...e,method:"GET"},s)}head(t,e={},s={}){return new this.Requester(t,{...this.parameters,...e,method:"HEAD"},s)}options(t,e={},s={}){return new this.Requester(t,{...this.parameters,...e,method:"OPTIONS"},s)}delete(t,e={},s={}){return new this.Requester(t,{...this.parameters,...e,method:"DELETE"},s)}post(t,e={},s={},r={}){let o=this.autoContentType(e);return new this.Requester(t,{...this.parameters,...s,headers:{...this.parameters.headers||{},...o.headers,...s.headers||{}},method:"POST",body:o.body},r)}put(t,e={},s={},r={}){let o=this.autoContentType(e);return new this.Requester(t,{...this.parameters,...s,headers:{...this.parameters.headers||{},...o.headers,...s.headers||{}},method:"PUT",body:o.body},r)}patch(t,e={},s={},r={}){let o=this.autoContentType(e);return new this.Requester(t,{...this.parameters,...s,headers:{...this.parameters.headers||{},...o.headers,...s.headers||{}},method:"PATCH",body:o.body},r)}autoContentType(t){return t instanceof FormData?{headers:{},body:t}:t instanceof Object?{headers:{"Content-Type":"application/json; charset=utf-8"},body:JSON.stringify(t)}:"string"==typeof t?{headers:{"Content-Type":"text/html; charset=utf-8"},body:t}:{headers:{},body:t}}}window.Toanotherback=r,window.Dictionary=t;export{t as Dictionary,r as default};
