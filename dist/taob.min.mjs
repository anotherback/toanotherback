class e{static#e={};static#t=!1;static use(e){this.#t=e}static add(e,t={}){this.#e[e]=function e(t,r){let s={};for(const o in t)"string"==typeof t[o]||Array.isArray(t[o])?s={...s,[r+o]:t[o]}:"object"==typeof t[o]&&(s={...s,...e(t[o],r+o+".")});return s}(t,"")}static translate(e){if(!1!==this.#t&&this.#e[this.#t]?.[e]){let t=this.#e[this.#t][e];for(;/{.*?}/g.test(t);)t=t.replace(/{(.*?)}/g,((e,t)=>this.translate(t)));return t}return e}}function t(...e){let t="";for(let r of e)r=r||"",r=r.startsWith("/")?r:"/"+r,t+=r;t=t.split("?");let r=t[1];for(t=t[0],t=t.endsWith("/")&&t.length>1?t.substring(0,t.length-1):t,t=t.replace(/\\/g,"/");t.indexOf("//")>-1;)t=t.replace(/\/\//g,"/");return t=t.replace(/_/g,""),t=t.replace(/ /g,""),("/"===t?"":t)+(void 0!==r?"?"+r:"")}class r{constructor(e,r,s){!0===r.disabledPrefix?(e=t(e),delete r.disabledPrefix):e=t(this.constructor.prefix,e),this.result=this.#r(e,r,s)}s(e){return this.#s=e,this}async sd(){let e=await this.result;if(!0===e.response?.ok)return e.data;throw new Error("Wrong Response")}e(e){return this.#o=e,this}async ed(){let e=await this.result;if(!1===e.response?.ok)return e.data;throw new Error("Wrong Response")}info(e){return this.#i=e,this}code(e,t){return this.#n[e]=t,this}async cd(e){let t=await this.result;if(t.response?.status===e)return t;throw new Error("Wrong Response")}then(e){return this.#h=e,this}catch(e){return this.#a=e,this}finally(e){return this.#d=e,this}result;#s=()=>{};#o=()=>{};#i=()=>{};#n={};#h=()=>{};#a=e=>{throw e};#d=()=>{};async#r(e,t,s){let o=this.constructor.requestInterceptor({path:e,parameters:t},s),i=await r.fetch(this.constructor.href+o.path,o.parameters),n=this.constructor.responseInterceptor(i,o,s);if(void 0!==n.error){this.constructor.hookError(n.error);try{this.#a(n.error)}finally{this.#d()}return}this.#h(n),void 0!==this.constructor.hookCode[n.response.status]&&this.constructor.hookCode[n.response.status].forEach((e=>e(n,o,s))),void 0!==this.#n[n.response.status]&&this.#n[n.response.status](n);let h=n.info||void 0;return void 0!==h&&void 0!==this.constructor.hookInfo[h]&&this.constructor.hookInfo[h].forEach((e=>e(n,o,s))),void 0!==h&&this.#i(h,n.response.ok),!0===n.response.ok?this.#s(n.data):!1===n.response.ok&&this.#o(n.data),this.#d(),n}static async fetch(e,t){if(void 0!==t.params){let r=e.split("?");Object.entries(t.params).forEach((([e,t])=>r[0]=r[0].replace(`{${e}}`,t))),delete t.params,e=r.join("?")}if(void 0!==t.query){let r=e.split("?"),s=[];Object.entries(t.query).forEach((([e,t])=>s.push(`${e}=${t}`))),delete t.query,e=r[0]+"?"+s.join("&")+(r[1]?"&"+r[1]:"")}try{const s=await fetch(e,t),o=s.headers.get("content-type"),i=s.headers.get(this.indexInfo)||void 0;try{if(-1!==o.indexOf("application/json"))var r=await s.json();else if(-1!==o.indexOf("text/"))r=await s.text();else r=await s.blob()}catch(e){r=void 0}return{response:s,data:r,info:i}}catch(e){return{error:e}}}static prefix="";static indexInfo="aob-info";static href="";static requestInterceptor=e=>e;static responseInterceptor=e=>e;static hookError=()=>{};static hookCode={};static hookInfo={}}class s{constructor(e={}){this.Requester=class extends r{},void 0!==e.host&&(this.host=e.host),void 0!==e.prefix&&(this.prefix=e.prefix),void 0!==e.https&&(this.https=e.https),void 0!==e.parameters&&(this.parameters=e.parameters),void 0!==e.indexInfo&&(this.indexInfo=e.indexInfo),void 0!==e.requestInterceptor&&this.setRequestInterceptor(e.requestInterceptor),void 0!==e.responseInterceptor&&this.setResponseInterceptor(e.responseInterceptor),void 0!==e.hookError&&this.setHookError(e.hookError)}#c=window.location.host;get host(){return this.#c}set host(e){this.#c=e,this.#u()}#p="";get prefix(){return this.#p}set prefix(e){this.#p=e,Object.defineProperty(this.Requester,"prefix",{value:this.#p,configurable:!0})}#f=window.location.protocol.slice(0,-1);get https(){return"http"!==this.#f}set https(e){if("boolean"!=typeof e)throw new Error("");this.#f=!0===e?"https":"http",this.#u()}#l="aob-info";get indexInfo(){return this.#l}set indexInfo(e){this.#l=e,Object.defineProperty(this.Requester,"indexInfo",{value:this.#l,configurable:!0})}parameters={};Requester={};#y(){Object.defineProperty(this.Requester,"indexInfo",{value:this.#l,configurable:!0})}#u(){Object.defineProperty(this.Requester,"href",{value:this.#f+"://"+this.host,configurable:!0})}setRequestInterceptor(e){Object.defineProperty(this.Requester,"requestInterceptor",{value:e,configurable:!0})}setResponseInterceptor(e){Object.defineProperty(this.Requester,"responseInterceptor",{value:e,configurable:!0})}setHookError(e){Object.defineProperty(this.Requester,"hookError",{value:e,configurable:!0})}addHookCode(e,t){void 0===this.Requester.hookCode[e]&&(this.Requester.hookCode[e]=[]),this.Requester.hookCode[e].push(t)}addHookInfo(e,t){void 0===this.Requester.hookInfo[e]&&(this.Requester.hookInfo[e]=[]),this.Requester.hookInfo[e].push(t)}removeHookCode(e,t){void 0===this.Requester.hookCode[e]&&(this.Requester.hookCode[e]=[]),this.Requester.hookCode[e]=this.Requester.hookCode[e].filter((e=>e!==t))}removeHookInfo(e,t){void 0===this.Requester.hookInfo[e]&&(this.Requester.hookInfo[e]=[]),this.Requester.hookInfo[e]=this.Requester.hookInfo[e].filter((e=>e!==t))}send(e,t={},r={}){return new this.Requester(e,{...this.parameters,...t},r)}get(e,t={},r={}){return new this.Requester(e,{...this.parameters,...t,method:"GET"},r)}head(e,t={},r={}){return new this.Requester(e,{...this.parameters,...t,method:"HEAD"},r)}options(e,t={},r={}){return new this.Requester(e,{...this.parameters,...t,method:"OPTIONS"},r)}delete(e,t={},r={}){return new this.Requester(e,{...this.parameters,...t,method:"DELETE"},r)}post(e,t={},r={},s={}){let o=this.autoContentType(t);return new this.Requester(e,{...this.parameters,...r,headers:{...this.parameters.headers||{},...o.headers,...r.headers||{}},method:"POST",body:o.body},s)}put(e,t={},r={},s={}){let o=this.autoContentType(t);return new this.Requester(e,{...this.parameters,...r,headers:{...this.parameters.headers||{},...o.headers,...r.headers||{}},method:"PUT",body:o.body},s)}patch(e,t={},r={},s={}){let o=this.autoContentType(t);return new this.Requester(e,{...this.parameters,...r,headers:{...this.parameters.headers||{},...o.headers,...r.headers||{}},method:"PATCH",body:o.body},s)}autoContentType(e){return e instanceof FormData?{headers:{},body:e}:e instanceof Object?{headers:{"Content-Type":"application/json; charset=utf-8"},body:JSON.stringify(e)}:"string"==typeof e?{headers:{"Content-Type":"text/html; charset=utf-8"},body:e}:{headers:{},body:e}}}window.Toanotherback=s,window.Dictionary=e;export{e as Dictionary,s as default};